name: Package Unittests

on:
  push:
    branches:
      - main
  pull_request:

  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:

jobs:
  unittest:
    strategy:
      matrix:
        python-major-version: [3]
        python-minor-version: [7,8,9]
        platform: [ubuntu-18.04]
        # include:
        #   - python-major-version: 3
        #     python-minor-version: 9
        #     platform: macos-latest
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set Python Version
        run: |
          echo "python-version=${{ matrix.python-major-version }}.${{ matrix.python-minor-version }}" >> $GITHUB_ENV

      - name: Setup Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
          architecture: x64

      - name: Checkout MultiPy
        uses: actions/checkout@v2

      - name: Install runtime build dependencies
        run: |
          set -eux
          pip install -r dev-requirements.txt
          sudo apt update
          xargs sudo apt install -y -qq --no-install-recommends <build-requirements.txt

      - name: Update cmake
      # sudo apt-key add -
        run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo gpg --dearmor -o /usr/share/keyrings/magic-key.gpg
          sudo apt-add-repository 'deb [arch=amd64,arm64 signed-by=/usr/share/keyrings/magic-key.gpg] https://apt.kitware.com/ubuntu/ bionic main'
          echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee -a /etc/apt/sources.list
          sudo apt update
          sudo apt install -y binutils cmake

      - name: Set up virtual environment
        run: |
          git submodule update --init --recursive --jobs 0
          pip3 install virtualenv
          git clone https://github.com/pyenv/pyenv.git ~/.pyenv
          export CFLAGS="-fPIC -g"
          declare -A py_version_dict
          py_version_dict[7]='3.7.10'
          py_version_dict[8]='3.8.13'
          py_version_dict[9]='3.9.13'
          py_version_dict[10]='3.10.6'
          py_install_version=${py_version_dict[${{ matrix.python-minor-version }}]}
          ~/.pyenv/bin/pyenv install --force ${py_install_version}
          virtualenv -p ~/.pyenv/versions/${py_install_version}/bin/python3 ~/venvs/multipy
          source ~/venvs/multipy/bin/activate

      - name: Run setup.py
        run: |
          pip3 install --pre torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cu113
          python setup.py install
          deactivate

      - name: Run tests
        run: coverage run -m unittest discover --verbose --start-directory multipy/test/package/ --pattern "test_*"

      - name: Coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          set -eux
          coverage report -m
          coverage xml

          codecov
