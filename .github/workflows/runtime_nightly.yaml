name: Multipy runtime nightly test + release

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:

jobs:
  unittest:
    strategy:
      matrix:
        python3-minor-version: [7,8,9,10]
        platform: [ubuntu-18.04]
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout MultiPy
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup SSH (Click me for login details)
        uses: ./.github/actions/setup-ssh
        with:
          github-secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        env:
          DOCKER_BUILDKIT: 1
        run: docker build -t multipy --progress=plain --build-arg --build-arg PYTHON_3_MINOR_VERSION=${{ matrix.python3-minor-version }} .

      - name: Test
        run: |
          docker run --rm multipy bash -c "if [[ ${{ matrix.python3-minor-version }} -lt 8 ]]; then source ~/venvs/multipy/bin/activate; fi && multipy/runtime/build/test_deploy"

      - name: Compat Tests
        run: |
          docker run --rm multipy bash -c "if [[ ${{ matrix.python3-minor-version }} -gt 7 ]]; then pip install -r compat-requirements.txt && multipy/runtime/build/interactive_embedded_interpreter --pyscript multipy/runtime/test_compat.py; fi"

      - name: Set Python Version
        run: |
          echo "python-version=3.${{ matrix.python3-minor-version }}" >> $GITHUB_ENV

      - name: Create Tarball
        run: |
          docker cp $(docker run -d multipy):/opt/dist/multipy .
          tar -czvf multipy_runtime_python${{ env.python-version }}.tar.gz multipy/

      - name: Update nightly release
        uses: pyTooling/Actions/releaser@main
        with:
          tag: nightly-runtime-python${{ env.python-version }}
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            multipy_runtime_python${{ env.python-version }}.tar.gz
